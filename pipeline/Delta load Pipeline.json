{
	"name": "Delta load Pipeline",
	"properties": {
		"activities": [
			{
				"name": "Lookup_OldWaterMark",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "lookupOldwatermarkSQL",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Lookup_NewWaterMark",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select max(ModifiedDate) as NewWatermark\nfrom saleslt.salesorderdetail",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Lookup_NewwarwrMarkSQL_AW",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Load Delta to Data Lake",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Lookup_OldWaterMark",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Lookup_NewWaterMark",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select * from saleslt.salesorderdetail where ModifiedDate >\n'@{activity('Lookup_OldWaterMark').output.firstRow.watermark}'\nand ModifiedDate <= '@{activity('Lookup_NewWaterMark').output.firstRow.newwatermark}'\n\n\n\n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DelimitedText7",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Update Old Watermark",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Load Delta to Data Lake",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[updatewatermark]",
					"storedProcedureParameters": {
						"newwatermark": {
							"value": {
								"value": "@{activity('Lookup_NewWaterMark').output.firstRow.newwatermark}",
								"type": "Expression"
							},
							"type": "DateTime"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LinkedSeevice_DB_repaso_ADF_KV",
					"type": "LinkedServiceReference"
				}
			}
		],
		"folder": {
			"name": "Proyectos"
		},
		"annotations": []
	}
}