{
	"name": "LookUp",
	"properties": {
		"folder": {
			"name": "Data Flow"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "LinkedService_BlobStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sourceCliente"
				},
				{
					"linkedService": {
						"referenceName": "LinkedService_BlobStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sourceServicios"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "LinkedService_BlobStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sinkClientesLookUp"
				}
			],
			"transformations": [
				{
					"name": "lookup",
					"description": "BÃºsqueda en \"sourceCliente\" desde \"sourceServicios\".\nEs el equvalente en sql a LEFT | RIGHT JOIN"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CodCliente as short,",
				"          Cliente as string,",
				"          ApePatern as string,",
				"          FechaNaci as string,",
				"          DNI as integer,",
				"          IdServicio as short",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     container: 'dataflowdataset',",
				"     folderPath: 'LookUp',",
				"     fileName: 'Cliente.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> sourceCliente",
				"source(output(",
				"          IdServicio as short,",
				"          Servicio as string,",
				"          Fecha as date 'dd/MM/yyyy',",
				"          MontoPagar as short",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     container: 'dataflowdataset',",
				"     folderPath: 'LookUp',",
				"     fileName: 'Servicios.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> sourceServicios",
				"sourceCliente, sourceServicios lookup(sourceCliente@IdServicio == sourceServicios@IdServicio,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup",
				"lookup sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'dataflowdataset',",
				"     folderPath: 'LookUp',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:['ReporteCliente.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sinkClientesLookUp"
			]
		}
	}
}