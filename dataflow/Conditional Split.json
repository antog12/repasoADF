{
	"name": "Conditional Split",
	"properties": {
		"folder": {
			"name": "Data Flow"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "LinkedService_AWDW2",
						"type": "LinkedServiceReference"
					},
					"name": "sourceProduct"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "LinkedService_BlobStorage",
						"type": "LinkedServiceReference"
					},
					"name": "ProductRed"
				},
				{
					"linkedService": {
						"referenceName": "LinkedService_BlobStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sinkProductBlue"
				},
				{
					"linkedService": {
						"referenceName": "LinkedService_BlobStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sinkProductBlack"
				},
				{
					"linkedService": {
						"referenceName": "LinkedService_BlobStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sinkproductotros"
				}
			],
			"transformations": [
				{
					"name": "splitproduct"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          Weight as decimal(8,2),",
				"          ProductCategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp,",
				"          ThumbNailPhoto as binary,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'SalesLT',",
				"     tableName: 'Product',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> sourceProduct",
				"sourceProduct split(Color=='Red',",
				"     Color=='Blue',",
				"     Color=='Black',",
				"     disjoint: false) ~> splitproduct@(Red, Blue, Black, Otros)",
				"splitproduct@Red sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'dataflowdataset',",
				"     folderPath: 'Conditional Split',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:['ProductRed.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> ProductRed",
				"splitproduct@Blue sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'dataflowdataset',",
				"     folderPath: 'Conditional Split',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:['productBlue.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sinkProductBlue",
				"splitproduct@Black sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'dataflowdataset',",
				"     folderPath: 'Conditional Split',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:['ProductBlack.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sinkProductBlack",
				"splitproduct@Otros sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'dataflowdataset',",
				"     folderPath: 'Conditional Split',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:['ProductOtros.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sinkproductotros"
			]
		}
	}
}