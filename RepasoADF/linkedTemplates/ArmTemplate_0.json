{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "RepasoADF"
		},
		"ASQLprueba_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"ASQLprueba\""
		},
		"AzureSqlDatabaseRepasoADF_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"AzureSqlDatabaseRepasoADF\""
		},
		"LinkedService_AWDW2_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"LinkedService_AWDW2\""
		},
		"LinkedService_BlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"LinkedService_BlobStorage\""
		},
		"LinkedSevice_ASQL_AWDW2_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"LinkedSevice_ASQL_AWDW2\""
		},
		"Linked_Service_ADLS_Origen_accountKey": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"accountKey\"de \"Linked_Service_ADLS_Origen\""
		},
		"Linked_Service_DB_Origen_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"Linked_Service_DB_Origen\""
		},
		"linkedService_asql_aw_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"linkedService_asql_aw\""
		},
		"ASQLprueba_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "antog12server.database.windows.net"
		},
		"ASQLprueba_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "@{linkedService().dataBaseNombre}"
		},
		"ASQLprueba_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "antog12"
		},
		"AzureSqlDatabaseRepasoADF_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "antog12server.database.windows.net"
		},
		"AzureSqlDatabaseRepasoADF_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "DB-repaso-ADF"
		},
		"AzureSqlDatabaseRepasoADF_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "antog12"
		},
		"LinkedSerevice_KV_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://AlmacenKeyVaultadsl.vault.azure.net/"
		},
		"Linked_Service_ADLS_Origen_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://almacenadls.dfs.core.windows.net/"
		},
		"Linked_Service_DB_Origen_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "antog12server.database.windows.net"
		},
		"Linked_Service_DB_Origen_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "DB-repaso-ADF"
		},
		"Linked_Service_DB_Origen_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "antog12"
		},
		"RestService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://pokeapi.co/api/v2/pokemon/ditto"
		},
		"RestService2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://reqres.in/api/users"
		},
		"linkedService_asql_aw_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "antog12server.database.windows.net"
		},
		"linkedService_asql_aw_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "@{linkedService().DataBaseName}"
		},
		"linkedService_asql_aw_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "antog12"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Consumo de APIs con Azure Data Factory')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Api Rest",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://pokeapi.co/api/v2/pokemon/ditto"
						}
					},
					{
						"name": "Set nombre",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Api Rest",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "nombre",
							"value": {
								"value": "@activity('Api Rest').output.name",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set movimientos",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Api Rest",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "movimientos",
							"value": {
								"value": "@length(activity('Api Rest').output.moves)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"nombre": {
						"type": "String"
					},
					"movimientos": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "Proyectos"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Filters')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Filter",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('FileName')",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item(),'.txt')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"FileName": {
						"type": "Array",
						"defaultValue": [
							"Employ.txt",
							"Sales.txt",
							"Employ.json",
							"Employ.parquet",
							"customer.txt"
						]
					}
				},
				"folder": {
					"name": "Iteraciones y condicionales"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/If Conditional')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(pipeline().parameters.pNumber,10)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "false Wait",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "true Wait",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"pNumber": {
						"type": "int",
						"defaultValue": 10
					}
				},
				"folder": {
					"name": "Pruebas"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/email_cuando_falla_el_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "filename",
							"value": {
								"value": "@int('123')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"filename": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Proyectos"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variablepruebaFallos",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "filename",
							"value": {
								"value": "@int('123')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"filename": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Pruebas"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pruebaSwitch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SwitchDemo",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.Pfile",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "customer",
									"activities": [
										{
											"name": "WaitCustomer",
											"type": "Wait",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"waitTimeInSeconds": 1
											}
										}
									]
								},
								{
									"value": "product",
									"activities": [
										{
											"name": "WaitProduct",
											"type": "Wait",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"waitTimeInSeconds": 1
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "On default delete file",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Pfile": {
						"type": "string",
						"defaultValue": "product"
					}
				},
				"folder": {
					"name": "Pruebas"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pruebasForEach3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('animales')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "animal",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"animales": {
						"type": "Array",
						"defaultValue": [
							"gato",
							"perro",
							"pato"
						]
					},
					"animal": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Pruebas"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pruebasForEach4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "coches",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('coches')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "marca",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "marca",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"coches": {
						"type": "Array",
						"defaultValue": [
							"mercedes",
							"porche",
							"ferrari"
						]
					},
					"marca": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Pruebas"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pruebasForeach')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_Pruebas",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('FileNames')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "filename",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"FileNames": {
						"type": "Array",
						"defaultValue": [
							"CustomerFile.txt",
							"ProductFile.txt",
							"OrderFile.txt"
						]
					},
					"filename": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Pruebas"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQLprueba')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"dataBaseNombre": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ASQLprueba_properties_typeProperties_server')]",
					"database": "[parameters('ASQLprueba_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ASQLprueba_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ASQLprueba_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseRepasoADF')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabaseRepasoADF_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabaseRepasoADF_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabaseRepasoADF_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabaseRepasoADF_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedSerevice_KV')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "hace referencia al key vault",
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LinkedSerevice_KV_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedService_AWDW2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LinkedService_AWDW2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedService_BlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LinkedService_BlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedSevice_ASQL_AWDW2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LinkedSevice_ASQL_AWDW2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Linked_Service_ADLS_Origen')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Linked Service de conexión al almacen adls",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Linked_Service_ADLS_Origen_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Linked_Service_ADLS_Origen_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Linked_Service_DB_Origen')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Conexión linked service a DB-repaso-ADF",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('Linked_Service_DB_Origen_properties_typeProperties_server')]",
					"database": "[parameters('Linked_Service_DB_Origen_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Linked_Service_DB_Origen_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Linked_Service_DB_Origen_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService2_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService_asql_aw')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "linked service para conectar a la db aw",
				"parameters": {
					"DataBaseName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('linkedService_asql_aw_properties_typeProperties_server')]",
					"database": "[parameters('linkedService_asql_aw_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('linkedService_asql_aw_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('linkedService_asql_aw_password')]"
					}
				}
			},
			"dependsOn": []
		}
	]
}