{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "RepasoADF"
		},
		"ASQLprueba_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"ASQLprueba\""
		},
		"LinkedService_AWDW2_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"LinkedService_AWDW2\""
		},
		"LinkedService_BlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"LinkedService_BlobStorage\""
		},
		"LinkedSevice_ASQL_AWDW2_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"LinkedSevice_ASQL_AWDW2\""
		},
		"Linked_Service_ADLS_Origen_accountKey": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"accountKey\"de \"Linked_Service_ADLS_Origen\""
		},
		"Linked_Service_DB_Origen_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"Linked_Service_DB_Origen\""
		},
		"linkedService_asql_aw_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"linkedService_asql_aw\""
		},
		"ASQLprueba_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "antog12server.database.windows.net"
		},
		"ASQLprueba_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "@{linkedService().dataBaseNombre}"
		},
		"ASQLprueba_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "antog12"
		},
		"Linked_Service_ADLS_Origen_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://almacenadls.dfs.core.windows.net/"
		},
		"Linked_Service_DB_Origen_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "antog12server.database.windows.net"
		},
		"Linked_Service_DB_Origen_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "DB-repaso-ADF"
		},
		"Linked_Service_DB_Origen_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "antog12"
		},
		"linkedService_asql_aw_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "antog12server.database.windows.net"
		},
		"linkedService_asql_aw_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "@{linkedService().DataBaseName}"
		},
		"linkedService_asql_aw_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "antog12"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ClienteExcel_a_clienteSql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "cargar archivo cliente desde esxcel hacia sql",
				"activities": [
					{
						"name": "Copy cliente hacia sql",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Nombre Empresa",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nombreEmpresa",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Nombre Cliente",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nombreCliente",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Tipo Cliente",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tipoCliente",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Linea",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Linea",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Nro Celular",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NroCelular",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Monto",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Monto",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "Fecha Contratacion",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "fechaContratacion",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Tipo Servicio",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tipoServicio",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "adls_Cliente_origen",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "asql_DB_repaso_adf",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Move and Transform Activity"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/adls_Cliente_origen')]",
				"[concat(variables('factoryId'), '/datasets/asql_DB_repaso_adf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Conditional SPlit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow Conditional Split",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Conditional Split",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceProduct": {},
									"ProductRed": {},
									"sinkProductBlue": {},
									"sinkProductBlack": {},
									"sinkproductotros": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataFlow"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Conditional Split')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Join')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow Join",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Join",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceProducto": {},
									"sourceSubcategoriaProducto": {},
									"sinkProductInnerjoin": {},
									"sinkProductLeftJoin": {},
									"sinkProductRightJoin": {},
									"sinkFullJoin": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataFlow"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Join')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/New Branch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow Product",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "New Branch",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceProduct": {},
									"sinkProductcsv": {},
									"sinkProductJson": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataFlow"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/New Branch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Primer Data Flow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Primer Data Flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Primer data flow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceCustomer": {},
									"sinkcustomer": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataFlow"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Primer data flow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Table_copy_sql_to_adls')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "vamos a copiar las tablas de AW hacia adls mediante parámetros",
				"activities": [
					{
						"name": "Copy_table_sql_to_adls",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable File Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "SalesLT.@{pipeline().parameters.TableName}"
							},
							{
								"name": "Destination",
								"value": "dataset/Move and transform activities/@{\ntoUpper(\n    variables('FileName')\n    )\n}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ASQL_AWDW_Table",
								"type": "DatasetReference",
								"parameters": {
									"DataBaseName": {
										"value": "@pipeline().parameters.DatabaseName",
										"type": "Expression"
									},
									"TableName": {
										"value": "@pipeline().parameters.TableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLS_almacenadls_table",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "@variables('FileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set variable File Name",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "FileName",
							"value": {
								"value": "@{\n    pipeline().parameters.TableName\n}_@{\n    formatDateTime(utcnow(),'yyyyMMdd')\n}.csv",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DatabaseName": {
						"type": "string"
					},
					"TableName": {
						"type": "String"
					}
				},
				"variables": {
					"FileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Move and Transform Activity"
				},
				"annotations": [
					"Exportar tabla a CSV"
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ASQL_AWDW_Table')]",
				"[concat(variables('factoryId'), '/datasets/ADLS_almacenadls_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pruebaparam')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy pruebas param",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sqlpruebasorigen",
								"type": "DatasetReference",
								"parameters": {
									"databaseNombre": {
										"value": "@pipeline().parameters.DataBaseNombre",
										"type": "Expression"
									},
									"TableNombre": {
										"value": "@pipeline().parameters.TableNombre",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinoPruebaParams",
								"type": "DatasetReference",
								"parameters": {
									"TableNombre": {
										"value": "@pipeline().parameters.TableNombre",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DataBaseNombre": {
						"type": "string"
					},
					"TableNombre": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Move and Transform Activity"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sqlpruebasorigen')]",
				"[concat(variables('factoryId'), '/datasets/DestinoPruebaParams')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ABS_Customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedService_BlobStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataFlow"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "primerDataFlow",
						"container": "dataflowdataset"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedService_BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_almacenadls_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linked_Service_ADLS_Origen",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Move and transform activities"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@{\ntoUpper(\n    dataset().TableName\n    )\n}",
							"type": "Expression"
						},
						"folderPath": "Move and transform activities",
						"fileSystem": "dataset"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linked_Service_ADLS_Origen')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQL_AWDW_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedService_asql_aw",
					"type": "LinkedServiceReference",
					"parameters": {
						"DataBaseName": {
							"value": "@dataset().DataBaseName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"DataBaseName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Move and transform activities"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "PasswordHash",
						"type": "varchar"
					},
					{
						"name": "PasswordSalt",
						"type": "varchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedService_asql_aw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedService_AWDW2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataFlow"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedService_AWDW2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinoPruebaParams')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linked_Service_ADLS_Origen",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableNombre": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Move and transform activities"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().TableNombre",
							"type": "Expression"
						},
						"folderPath": "Move and transform activities",
						"fileSystem": "dataset"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linked_Service_ADLS_Origen')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adls_Cliente_origen')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Linked_Service_ADLS_Origen",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Move and transform activities"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Cliente Nuevos",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Cliente.xlsx",
						"folderPath": "Move and transform activities",
						"fileSystem": "dataset"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Nombre Empresa",
						"type": "String"
					},
					{
						"name": "Nombre Cliente",
						"type": "String"
					},
					{
						"name": "Tipo Cliente",
						"type": "String"
					},
					{
						"name": "Linea",
						"type": "String"
					},
					{
						"name": "Nro Celular",
						"type": "String"
					},
					{
						"name": "Monto",
						"type": "String"
					},
					{
						"name": "Fecha Contratacion",
						"type": "String"
					},
					{
						"name": "Tipo Servicio",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linked_Service_ADLS_Origen')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/asql_DB_repaso_adf')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Conexión hacia sql",
				"linkedServiceName": {
					"referenceName": "Linked_Service_DB_Origen",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Move and transform activities"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "nombreEmpresa",
						"type": "varchar"
					},
					{
						"name": "nombreCliente",
						"type": "varchar"
					},
					{
						"name": "tipoCliente",
						"type": "varchar"
					},
					{
						"name": "Linea",
						"type": "varchar"
					},
					{
						"name": "NroCelular",
						"type": "varchar"
					},
					{
						"name": "Monto",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "fechaContratacion",
						"type": "date"
					},
					{
						"name": "tipoServicio",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Cliente"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Linked_Service_DB_Origen')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqlpruebasorigen')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ASQLprueba",
					"type": "LinkedServiceReference",
					"parameters": {
						"dataBaseNombre": {
							"value": "@dataset().databaseNombre",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"databaseNombre": {
						"type": "string"
					},
					"TableNombre": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Move and transform activities"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ThumbNailPhoto",
						"type": "varbinary"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": {
						"value": "@dataset().TableNombre",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ASQLprueba')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQLprueba')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"dataBaseNombre": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ASQLprueba_properties_typeProperties_server')]",
					"database": "[parameters('ASQLprueba_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ASQLprueba_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ASQLprueba_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedService_AWDW2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LinkedService_AWDW2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedService_BlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LinkedService_BlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedSevice_ASQL_AWDW2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LinkedSevice_ASQL_AWDW2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Linked_Service_ADLS_Origen')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Linked Service de conexión al almacen adls",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Linked_Service_ADLS_Origen_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Linked_Service_ADLS_Origen_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Linked_Service_DB_Origen')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Conexión linked service a DB-repaso-ADF",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('Linked_Service_DB_Origen_properties_typeProperties_server')]",
					"database": "[parameters('Linked_Service_DB_Origen_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Linked_Service_DB_Origen_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Linked_Service_DB_Origen_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService_asql_aw')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "linked service para conectar a la db aw",
				"parameters": {
					"DataBaseName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('linkedService_asql_aw_properties_typeProperties_server')]",
					"database": "[parameters('linkedService_asql_aw_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('linkedService_asql_aw_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('linkedService_asql_aw_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Conditional Split')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Data Flow"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "LinkedService_AWDW2",
								"type": "LinkedServiceReference"
							},
							"name": "sourceProduct"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "LinkedService_BlobStorage",
								"type": "LinkedServiceReference"
							},
							"name": "ProductRed"
						},
						{
							"linkedService": {
								"referenceName": "LinkedService_BlobStorage",
								"type": "LinkedServiceReference"
							},
							"name": "sinkProductBlue"
						},
						{
							"linkedService": {
								"referenceName": "LinkedService_BlobStorage",
								"type": "LinkedServiceReference"
							},
							"name": "sinkProductBlack"
						},
						{
							"linkedService": {
								"referenceName": "LinkedService_BlobStorage",
								"type": "LinkedServiceReference"
							},
							"name": "sinkproductotros"
						}
					],
					"transformations": [
						{
							"name": "splitproduct"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ProductID as integer,",
						"          Name as string,",
						"          ProductNumber as string,",
						"          Color as string,",
						"          StandardCost as decimal(19,4),",
						"          ListPrice as decimal(19,4),",
						"          Size as string,",
						"          Weight as decimal(8,2),",
						"          ProductCategoryID as integer,",
						"          ProductModelID as integer,",
						"          SellStartDate as timestamp,",
						"          SellEndDate as timestamp,",
						"          DiscontinuedDate as timestamp,",
						"          ThumbNailPhoto as binary,",
						"          ThumbnailPhotoFileName as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'SalesLT',",
						"     tableName: 'Product',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> sourceProduct",
						"sourceProduct split(Color=='Red',",
						"     Color=='Blue',",
						"     Color=='Black',",
						"     disjoint: false) ~> splitproduct@(Red, Blue, Black, Otros)",
						"splitproduct@Red sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     container: 'dataflowdataset',",
						"     folderPath: 'Conditional Split',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     partitionFileNames:['ProductRed.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          ProductID,",
						"          Name,",
						"          ProductNumber,",
						"          Color,",
						"          StandardCost,",
						"          ListPrice,",
						"          Size,",
						"          Weight,",
						"          ProductCategoryID,",
						"          ProductModelID,",
						"          SellStartDate,",
						"          SellEndDate,",
						"          DiscontinuedDate",
						"     ),",
						"     partitionBy('hash', 1)) ~> ProductRed",
						"splitproduct@Blue sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     container: 'dataflowdataset',",
						"     folderPath: 'Conditional Split',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     partitionFileNames:['productBlue.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          ProductID,",
						"          Name,",
						"          ProductNumber,",
						"          Color,",
						"          StandardCost,",
						"          ListPrice,",
						"          Size,",
						"          Weight,",
						"          ProductCategoryID,",
						"          ProductModelID,",
						"          SellStartDate,",
						"          SellEndDate,",
						"          DiscontinuedDate",
						"     ),",
						"     partitionBy('hash', 1)) ~> sinkProductBlue",
						"splitproduct@Black sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     container: 'dataflowdataset',",
						"     folderPath: 'Conditional Split',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     partitionFileNames:['ProductBlack.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          ProductID,",
						"          Name,",
						"          ProductNumber,",
						"          Color,",
						"          StandardCost,",
						"          ListPrice,",
						"          Size,",
						"          Weight,",
						"          ProductCategoryID,",
						"          ProductModelID,",
						"          SellStartDate,",
						"          SellEndDate,",
						"          DiscontinuedDate",
						"     ),",
						"     partitionBy('hash', 1)) ~> sinkProductBlack",
						"splitproduct@Otros sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     container: 'dataflowdataset',",
						"     folderPath: 'Conditional Split',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     partitionFileNames:['ProductOtros.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          ProductID,",
						"          Name,",
						"          ProductNumber,",
						"          Color,",
						"          StandardCost,",
						"          ListPrice,",
						"          Size,",
						"          Weight,",
						"          ProductCategoryID,",
						"          ProductModelID,",
						"          SellStartDate,",
						"          SellEndDate,",
						"          DiscontinuedDate",
						"     ),",
						"     partitionBy('hash', 1)) ~> sinkproductotros"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedService_AWDW2')]",
				"[concat(variables('factoryId'), '/linkedServices/LinkedService_BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Join')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Data Flow"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "LinkedService_BlobStorage",
								"type": "LinkedServiceReference"
							},
							"name": "sourceProducto"
						},
						{
							"linkedService": {
								"referenceName": "LinkedService_BlobStorage",
								"type": "LinkedServiceReference"
							},
							"name": "sourceSubcategoriaProducto"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "LinkedService_BlobStorage",
								"type": "LinkedServiceReference"
							},
							"name": "sinkProductInnerjoin"
						},
						{
							"linkedService": {
								"referenceName": "LinkedService_BlobStorage",
								"type": "LinkedServiceReference"
							},
							"name": "sinkProductLeftJoin"
						},
						{
							"linkedService": {
								"referenceName": "LinkedService_BlobStorage",
								"type": "LinkedServiceReference"
							},
							"name": "sinkProductRightJoin"
						},
						{
							"linkedService": {
								"referenceName": "LinkedService_BlobStorage",
								"type": "LinkedServiceReference"
							},
							"name": "sinkFullJoin"
						}
					],
					"transformations": [
						{
							"name": "InnerJoin"
						},
						{
							"name": "LeftOuterJoin"
						},
						{
							"name": "RightOuterJoin"
						},
						{
							"name": "FullJoin"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ProductoId as short,",
						"          NombreProducto as string,",
						"          ProductoSubCategoriaId as short,",
						"          Descripcion as string,",
						"          Categoria as string,",
						"          Color as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'excel',",
						"     container: 'dataflowdataset',",
						"     folderPath: 'Join',",
						"     fileName: 'Producto.xlsx',",
						"     sheetName: 'Producto',",
						"     firstRowAsHeader: true) ~> sourceProducto",
						"source(output(",
						"          SubCategoriaProductoId as short,",
						"          NombreSubCategoria as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'excel',",
						"     container: 'dataflowdataset',",
						"     folderPath: 'Join',",
						"     fileName: 'SubCategoriaProducto.xlsx',",
						"     sheetName: 'SubCategoriaProducto',",
						"     firstRowAsHeader: true) ~> sourceSubcategoriaProducto",
						"sourceProducto, sourceSubcategoriaProducto join(ProductoSubCategoriaId == SubCategoriaProductoId,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> InnerJoin",
						"sourceProducto, sourceSubcategoriaProducto join(ProductoSubCategoriaId == SubCategoriaProductoId,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LeftOuterJoin",
						"sourceProducto, sourceSubcategoriaProducto join(ProductoSubCategoriaId == SubCategoriaProductoId,",
						"     joinType:'right',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> RightOuterJoin",
						"sourceProducto, sourceSubcategoriaProducto join(ProductoSubCategoriaId == SubCategoriaProductoId,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> FullJoin",
						"InnerJoin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     container: 'dataflowdataset',",
						"     folderPath: 'Join',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     partitionFileNames:['ProductInnerJoin.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sinkProductInnerjoin",
						"LeftOuterJoin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     container: 'dataflowdataset',",
						"     folderPath: 'Join',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     partitionFileNames:['ProductLeftJoin.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sinkProductLeftJoin",
						"RightOuterJoin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     container: 'dataflowdataset',",
						"     folderPath: 'Join',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     partitionFileNames:['ProductRightJoin.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sinkProductRightJoin",
						"FullJoin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     container: 'dataflowdataset',",
						"     folderPath: 'Join',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     partitionFileNames:['ProductFullJoin.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sinkFullJoin"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedService_BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/New Branch')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Data Flow"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "LinkedSevice_ASQL_AWDW2",
								"type": "LinkedServiceReference"
							},
							"name": "sourceProduct"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "LinkedService_BlobStorage",
								"type": "LinkedServiceReference"
							},
							"name": "sinkProductcsv"
						},
						{
							"linkedService": {
								"referenceName": "LinkedService_BlobStorage",
								"type": "LinkedServiceReference"
							},
							"name": "sinkProductJson"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          ProductID as integer,",
						"          Name as string,",
						"          ProductNumber as string,",
						"          Color as string,",
						"          StandardCost as decimal(19,4),",
						"          ListPrice as decimal(19,4),",
						"          Size as string,",
						"          Weight as decimal(8,2),",
						"          ProductCategoryID as integer,",
						"          ProductModelID as integer,",
						"          SellStartDate as timestamp,",
						"          SellEndDate as timestamp,",
						"          DiscontinuedDate as timestamp,",
						"          ThumbNailPhoto as binary,",
						"          ThumbnailPhotoFileName as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'query',",
						"     store: 'sqlserver',",
						"     query: 'select * from saleslt.product',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> sourceProduct",
						"sourceProduct sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     container: 'dataflowdataset',",
						"     folderPath: 'New Branch',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     partitionFileNames:['Product.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          ProductID,",
						"          Name,",
						"          ProductNumber,",
						"          Color,",
						"          StandardCost,",
						"          ListPrice,",
						"          Size,",
						"          Weight,",
						"          ProductCategoryID,",
						"          ProductModelID,",
						"          SellStartDate,",
						"          SellEndDate,",
						"          DiscontinuedDate",
						"     ),",
						"     partitionBy('hash', 1)) ~> sinkProductcsv",
						"sourceProduct sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'json',",
						"     container: 'dataflowdataset',",
						"     folderPath: 'New Branch',",
						"     partitionFileNames:['Product.Json'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          ProductID,",
						"          Name,",
						"          ProductNumber,",
						"          Color,",
						"          StandardCost,",
						"          ListPrice,",
						"          Size,",
						"          Weight,",
						"          ProductCategoryID,",
						"          ProductModelID,",
						"          SellStartDate,",
						"          SellEndDate,",
						"          DiscontinuedDate",
						"     ),",
						"     partitionBy('hash', 1)) ~> sinkProductJson"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedSevice_ASQL_AWDW2')]",
				"[concat(variables('factoryId'), '/linkedServices/LinkedService_BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Primer data flow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Data Flow"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "sourceCustomer"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ABS_Customer",
								"type": "DatasetReference"
							},
							"name": "sinkcustomer"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          CustomerID as integer,",
						"          NameStyle as boolean,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string,",
						"          PasswordHash as string,",
						"          PasswordSalt as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> sourceCustomer",
						"sourceCustomer sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['Customer.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sinkcustomer"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/ABS_Customer')]"
			]
		}
	]
}